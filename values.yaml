
# image:
#   repository: 
#   # This sets the pull policy for images.
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# imagepullsecrets: nexus-snapshot-registry
# environmentVariables:
# # This is to override the chart name.
# nameOverride: ""
# fullnameOverride: ""
# application_name: "application-name"
# trigramme: "coresys"
# namespace: 
#   enabled: false
#   name: "application-name" 
#   size: "large"
#   resourcequota:
#     enabled: false
# # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}
# podLabels: {}
# securityContext: 
#   enbled: false
#   allowPrivilegeEscalation: false # allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
#   capabilities: # The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
#     drop: ["ALL"]
#   runAsNonRoot: true # Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed.
#   seccompProfile: # The seccomp options to use by the containers in this pod
#     type: RuntimeDefault # type indicates which kind of seccomp profile will be applied. Valid options are: Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied. Possible enum values: - `"Localhost"` indicates a profile defined in a file on the node should be used. The file's location relative to <kubelet-root-dir>/seccomp. - `"RuntimeDefault"` represents the default container runtime seccomp profile. - `"Unconfined"` indicates no seccomp profile is applied (A.K.A. unconfined).
#   runAsUser: 1000
# # create service 
# service:
#   name: 8080-tcp
#   type: ClusterIP
#   port: 8080
#   targetPort: 8080
# # create route 
# route:
#   enabled: true
#   className: ""
#   annotations: {}
#   host: 
#   tls: 
#     termination: edge
#     insecureEdgeTerminationPolicy: Redirect
#   wildcardPolicy: None

# resources: 
#   limits:
#     cpu: 500m
#     memory: 1Gi
#   requests:
#     cpu: 125m
#     memory: 125m

# # This is to setup the liveness and readiness probes 
# probes:
#   enabled: false
#   livenessProbe:
#     httpGet:
#       path: /
#       port: http
#   readinessProbe:
#     httpGet:
#       path: /
#       port: http

# # This section is for setting up autoscaling 
# autoscaling:
#   enabled: false
#   minReplicas: 3
#   maxReplicas: 5
#   targetCPUUtilizationPercentage: 80
#   targetMemoryUtilizationPercentage: 80
# #Config secret
# secret:
#   name: postgresql
#   enbled: true
#   data:

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

